package GUI;

import User.AllUsers;
import User.User;

import javax.swing.JFrame;
import java.io.BufferedReader;
import java.io.FileReader;
import java.security.MessageDigest;
import java.security.NoSuchAlgorithmException;
import java.util.ArrayList;
import java.util.Scanner;

/**
 *
 * @author James
 */
public class LoginGUI extends javax.swing.JFrame {

    private int Current;
    private String folderDirectory = System.getProperty("user.dir") + "\\UserDetails.txt";
    /**
     * Creates new form LoginGUI
     */
    public LoginGUI() {
        initComponents();
        Current = 0;
        this.setVisible(true);
        this.pack();
        this.setLocationRelativeTo(null);
        this.setDefaultCloseOperation(JFrame.EXIT_ON_CLOSE);

    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">
    private void initComponents() {

        Hedder = new javax.swing.JPanel();
        LoginText = new javax.swing.JLabel();
        Minimise = new javax.swing.JLabel();
        Close = new javax.swing.JLabel();
        Body = new javax.swing.JPanel();
        PasswordText = new javax.swing.JLabel();
        EmailText = new javax.swing.JLabel();
        Email = new javax.swing.JTextField();
        Password = new javax.swing.JPasswordField();
        LoginButton = new javax.swing.JButton();
        RegisterInteadButton = new javax.swing.JLabel();
        ErrorMessage = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setUndecorated(true);

        Hedder.setBackground(new java.awt.Color(145, 180, 150));

        LoginText.setFont(new java.awt.Font("Tahoma", 1, 24)); // NOI18N
        LoginText.setForeground(new java.awt.Color(255, 255, 255));
        LoginText.setText("Login");

        Minimise.setFont(new java.awt.Font("Tahoma", 1, 24)); // NOI18N
        Minimise.setForeground(new java.awt.Color(255, 255, 255));
        Minimise.setText("-");
        Minimise.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        Minimise.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                MinimiseMouseClicked(evt);
            }
        });

        Close.setFont(new java.awt.Font("Tahoma", 1, 24)); // NOI18N
        Close.setForeground(new java.awt.Color(255, 255, 255));
        Close.setText("X");
        Close.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        Close.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                CloseMouseClicked(evt);
            }
        });

        javax.swing.GroupLayout HedderLayout = new javax.swing.GroupLayout(Hedder);
        Hedder.setLayout(HedderLayout);
        HedderLayout.setHorizontalGroup(
                HedderLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                        .addGroup(HedderLayout.createSequentialGroup()
                                .addGap(29, 29, 29)
                                .addComponent(LoginText, javax.swing.GroupLayout.PREFERRED_SIZE, 125, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addComponent(Minimise)
                                .addGap(18, 18, 18)
                                .addComponent(Close, javax.swing.GroupLayout.PREFERRED_SIZE, 24, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addContainerGap())
        );
        HedderLayout.setVerticalGroup(
                HedderLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                        .addGroup(HedderLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                .addComponent(Minimise, javax.swing.GroupLayout.DEFAULT_SIZE, 60, Short.MAX_VALUE)
                                .addComponent(LoginText))
                        .addComponent(Close, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );

        Body.setBackground(new java.awt.Color(46, 49, 49));

        PasswordText.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        PasswordText.setForeground(new java.awt.Color(218, 223, 225));
        PasswordText.setText("Password:");

        EmailText.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        EmailText.setForeground(new java.awt.Color(218, 223, 225));
        EmailText.setText("Email:");

        Email.setBackground(new java.awt.Color(149, 165, 166));
        Email.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        Email.setForeground(new java.awt.Color(238, 238, 238));
        Email.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                EmailActionPerformed(evt);
            }
        });

        Password.setBackground(new java.awt.Color(149, 165, 166));
        Password.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        Password.setForeground(new java.awt.Color(238, 238, 238));

        LoginButton.setBackground(new java.awt.Color(148, 124, 176));
        LoginButton.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        LoginButton.setForeground(new java.awt.Color(255, 255, 255));
        LoginButton.setText("Login");
        LoginButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                LoginButtonActionPerformed(evt);
            }
        });

        RegisterInteadButton.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N
        RegisterInteadButton.setForeground(new java.awt.Color(218, 223, 225));
        RegisterInteadButton.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        RegisterInteadButton.setText("Not got an account? Sign Up here!");
        RegisterInteadButton.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                RegisterInteadButtonMouseClicked(evt);
            }
        });

        ErrorMessage.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        ErrorMessage.setForeground(new java.awt.Color(255, 0, 0));
        ErrorMessage.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);

        javax.swing.GroupLayout BodyLayout = new javax.swing.GroupLayout(Body);
        Body.setLayout(BodyLayout);
        BodyLayout.setHorizontalGroup(
                BodyLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                        .addGroup(BodyLayout.createSequentialGroup()
                                .addGap(50, 50, 50)
                                .addGroup(BodyLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                        .addGroup(BodyLayout.createSequentialGroup()
                                                .addComponent(EmailText, javax.swing.GroupLayout.PREFERRED_SIZE, 90, javax.swing.GroupLayout.PREFERRED_SIZE)
                                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                                .addComponent(Email, javax.swing.GroupLayout.PREFERRED_SIZE, 200, javax.swing.GroupLayout.PREFERRED_SIZE))
                                        .addGroup(BodyLayout.createSequentialGroup()
                                                .addComponent(PasswordText, javax.swing.GroupLayout.PREFERRED_SIZE, 90, javax.swing.GroupLayout.PREFERRED_SIZE)
                                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                                .addComponent(Password, javax.swing.GroupLayout.PREFERRED_SIZE, 200, javax.swing.GroupLayout.PREFERRED_SIZE))
                                        .addGroup(BodyLayout.createSequentialGroup()
                                                .addGap(49, 49, 49)
                                                .addComponent(RegisterInteadButton, javax.swing.GroupLayout.PREFERRED_SIZE, 226, javax.swing.GroupLayout.PREFERRED_SIZE)))
                                .addContainerGap(50, Short.MAX_VALUE))
                        .addComponent(ErrorMessage, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, BodyLayout.createSequentialGroup()
                                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addComponent(LoginButton, javax.swing.GroupLayout.PREFERRED_SIZE, 104, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(97, 97, 97))
        );
        BodyLayout.setVerticalGroup(
                BodyLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                        .addGroup(BodyLayout.createSequentialGroup()
                                .addGap(12, 12, 12)
                                .addComponent(ErrorMessage, javax.swing.GroupLayout.PREFERRED_SIZE, 20, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(18, 18, 18)
                                .addGroup(BodyLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                        .addComponent(EmailText, javax.swing.GroupLayout.PREFERRED_SIZE, 40, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addComponent(Email, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addGap(18, 18, 18)
                                .addGroup(BodyLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                        .addComponent(PasswordText)
                                        .addComponent(Password, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addGap(18, 18, 18)
                                .addComponent(LoginButton, javax.swing.GroupLayout.PREFERRED_SIZE, 41, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(18, 18, 18)
                                .addComponent(RegisterInteadButton)
                                .addContainerGap(18, Short.MAX_VALUE))
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
                layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                        .addComponent(Hedder, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(Body, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
                layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                        .addGroup(layout.createSequentialGroup()
                                .addComponent(Hedder, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(0, 0, 0)
                                .addComponent(Body, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
        );

        pack();
    }// </editor-fold>

    private void EmailActionPerformed(java.awt.event.ActionEvent evt) {
        // TODO add your handling code here:
    }

    private void CloseMouseClicked(java.awt.event.MouseEvent evt) {
        System.out.println("[Class: LoginGUI] CloseMouseClicked() Called");
        System.exit(0);

    }

    private void MinimiseMouseClicked(java.awt.event.MouseEvent evt) {
        System.out.println("[Class: LoginGUI] MinimiseCloseMouseClicked() Called");
        this.setState(JFrame.ICONIFIED);

    }

    private void LoginButtonActionPerformed(java.awt.event.ActionEvent evt) {
        System.out.println("[Class: LoginGUI] LoginButtonActionPerformed() Called");

        char[] Passfeild = Password.getPassword();
        String password = String.copyValueOf(Passfeild);
        String email = Email.getText();

        if(Filled()){
            if(checkEmail()){
                if(checkPassword(AllUsers.readFile())){

                    AllUsers.setCurrentUser(Current);
                    System.out.println("Current User Index = " + AllUsers.getCurrentUser());

                    GameMenu g = new GameMenu();
                    g.setVisible(true);
                    g.pack();
                    g.setLocationRelativeTo(null);
                    g.setDefaultCloseOperation(JFrame.EXIT_ON_CLOSE);
                    this.dispose();

                }else {
                    ErrorMessage.setText("Invalid Password");
                }

            }else {
                ErrorMessage.setText("Invalid Email");
            }
        }else {
            ErrorMessage.setText("Fill in all fields");
        }
    }

    private boolean checkEmail(){
        System.out.println("[Class: LoginGUI] checkEmail() Called");

        String lineFromFile;
        Scanner s = new Scanner(System.in);
        String Email;
        boolean TakenEmail;

        int i = 0;

        Email = this.Email.getText();

        try {
            BufferedReader read = new BufferedReader(new FileReader(folderDirectory));
            while ((lineFromFile = read.readLine()) != null) {
                String[] UserDetails = lineFromFile.split(", ");
                TakenEmail = UserDetails[0].equalsIgnoreCase(Email);
                if (TakenEmail) {
                    Current = i;
                    return true;
                } else {
                    i++;
                }
            }
            Current = i;
            return false;
        } catch (Exception e) {
            System.out.println("Error: " + e);
        }
        return false;
    }

    private String Encrypt(String Password){
        System.out.println("[Class: LoginGUI] Encrypt() Called");

        try {
            MessageDigest Encrypt = MessageDigest.getInstance("SHA");

            Encrypt.update(Password.getBytes());
            byte[] Encryption = Encrypt.digest();

            StringBuilder sb = new StringBuilder();
            for (byte b: Encryption){
                sb.append(String.format("%02x",b));
            }

            return sb.toString();

        } catch (NoSuchAlgorithmException e) {
            e.printStackTrace();
        }

        return "";
    }

    private boolean checkPassword(ArrayList<User> Users){
        System.out.println("[Class: LoginGUI] checkPassword() Called");

        boolean validPassword;
        String lineFromFile;
        int x = 0;
        char[] Passfeild = Password.getPassword();
        String Password = Encrypt(String.copyValueOf(Passfeild));

        try {
            BufferedReader read = new BufferedReader(new FileReader(folderDirectory));
            while ((lineFromFile = read.readLine()) != null) {
                String[] UserDetails = lineFromFile.split(", ");
                validPassword = UserDetails[2].equals(Password);
                if (validPassword && Users.get(x).getLogin().getPassword().equals(Password) && (x == Current)) {
                    return true;
                } else {
                    x++;
                }
            }

        } catch (Exception e) {
            System.out.println("Error: " + e);
        }

        AllUsers.setCurrentUser(Current);
        System.out.println(Current);
        return false;
    }

    private boolean Filled(){
        System.out.println("[Class: LoginGUI] Filled() Called");

        char[] Passfeild = Password.getPassword();
        String password = String.copyValueOf(Passfeild);

        if(Email.getText().isEmpty() || password.isEmpty()){
            return false;
        }else{
            return true;
        }
    }

    private void RegisterInteadButtonMouseClicked(java.awt.event.MouseEvent evt) {
        System.out.println("[Class: LoginGUI] RegisterInsteadButtonMouseClicked() Called");

        RegisterGUI rg = new RegisterGUI();
        rg.setVisible(true);
        rg.pack();
        rg.setLocationRelativeTo(null);
        rg.setDefaultCloseOperation(JFrame.EXIT_ON_CLOSE);
        this.dispose();

    }

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(LoginGUI.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(LoginGUI.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(LoginGUI.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(LoginGUI.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new LoginGUI().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify
    private javax.swing.JPanel Body;
    private javax.swing.JLabel Close;
    private javax.swing.JTextField Email;
    private javax.swing.JLabel EmailText;
    private javax.swing.JLabel ErrorMessage;
    private javax.swing.JPanel Hedder;
    private javax.swing.JButton LoginButton;
    private javax.swing.JLabel LoginText;
    private javax.swing.JLabel Minimise;
    private javax.swing.JPasswordField Password;
    private javax.swing.JLabel PasswordText;
    private javax.swing.JLabel RegisterInteadButton;
    // End of variables declaration
}

